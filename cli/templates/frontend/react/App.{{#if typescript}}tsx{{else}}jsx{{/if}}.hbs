import React from 'react';
{{#if (includes features "routing")}}
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
{{/if}}
{{#if (includes features "state-management")}}
import { Provider } from 'react-redux';
import { store } from './store';
{{/if}}

{{#switch componentStyle}}
{{#case "styled-components"}}
import styled from 'styled-components';

const AppContainer = styled.div`
  min-height: 100vh;
  padding: 2rem;
  text-align: center;
`;

const Title = styled.h1`
  color: #333;
  font-size: 2.5rem;
  margin-bottom: 1rem;
`;
{{/case}}
{{#case "emotion"}}
/** @jsxImportSource @emotion/react */
import { css } from '@emotion/react';

const appStyles = css`
  min-height: 100vh;
  padding: 2rem;
  text-align: center;
`;

const titleStyles = css`
  color: #333;
  font-size: 2.5rem;
  margin-bottom: 1rem;
`;
{{/case}}
{{#default}}
import './App.css';
{{/default}}
{{/switch}}

{{#if (includes features "api")}}
import { useEffect, useState } from 'react';
{{/if}}

interface AppProps {}

const App: React.FC<AppProps> = () => {
{{#if (includes features "api")}}
  const [data, setData] = useState<any>(null);

  useEffect(() => {
    fetch('/api/data')
      .then(response => response.json())
      .then(data => setData(data))
      .catch(error => console.error('Error fetching data:', error));
  }, []);
{{/if}}

  return (
{{#if (includes features "state-management")}}
    <Provider store={store}>
{{/if}}
{{#if (includes features "routing")}}
      <Router>
{{/if}}
{{#switch componentStyle}}
{{#case "styled-components"}}
        <AppContainer>
          <Title>{{titleCase projectName}}</Title>
          <p>Welcome to your new {{titleCase frontend}} application!</p>
{{#if (includes features "api")}}
          {data && (
            <div>
              <h3>API Data:</h3>
              <pre>{JSON.stringify(data, null, 2)}</pre>
            </div>
          )}
{{/if}}
{{#if (includes features "routing")}}
          <Routes>
            <Route path="/" element={<div>Home Page</div>} />
            <Route path="/about" element={<div>About Page</div>} />
          </Routes>
{{/if}}
        </AppContainer>
{{/case}}
{{#case "emotion"}}
        <div css={appStyles}>
          <h1 css={titleStyles}>{{titleCase projectName}}</h1>
          <p>Welcome to your new {{titleCase frontend}} application!</p>
{{#if (includes features "api")}}
          {data && (
            <div>
              <h3>API Data:</h3>
              <pre>{JSON.stringify(data, null, 2)}</pre>
            </div>
          )}
{{/if}}
{{#if (includes features "routing")}}
          <Routes>
            <Route path="/" element={<div>Home Page</div>} />
            <Route path="/about" element={<div>About Page</div>} />
          </Routes>
{{/if}}
        </div>
{{/case}}
{{#default}}
        <div className="app">
          <h1>{{titleCase projectName}}</h1>
          <p>Welcome to your new {{titleCase frontend}} application!</p>
{{#if (includes features "api")}}
          {data && (
            <div>
              <h3>API Data:</h3>
              <pre>{JSON.stringify(data, null, 2)}</pre>
            </div>
          )}
{{/if}}
{{#if (includes features "routing")}}
          <Routes>
            <Route path="/" element={<div>Home Page</div>} />
            <Route path="/about" element={<div>About Page</div>} />
          </Routes>
{{/if}}
        </div>
{{/default}}
{{/switch}}
{{#if (includes features "routing")}}
      </Router>
{{/if}}
{{#if (includes features "state-management")}}
    </Provider>
{{/if}}
  );
};

export default App;