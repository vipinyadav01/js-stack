{{#if frontend.react}}
import React, { useState } from 'react';
{{#if styling.tailwind}}
import './LoginForm.css';
{{/if}}

interface LoginFormProps {
  onSubmit: (email: string, password: string) => void;
  isLoading?: boolean;
}

const LoginForm: React.FC<LoginFormProps> = ({ onSubmit, isLoading = false }) => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onSubmit(email, password);
  };

  return (
    <div className="{{#if styling.tailwind}}max-w-md mx-auto mt-8 p-6 bg-white rounded-lg shadow-md{{else}}login-form-container{{/if}}">
      <h2 className="{{#if styling.tailwind}}text-2xl font-bold mb-6 text-center{{else}}login-title{{/if}}">
        Sign In
      </h2>
      
      <form onSubmit={handleSubmit} className="{{#if styling.tailwind}}space-y-4{{else}}login-form{{/if}}">
        <div>
          <label htmlFor="email" className="{{#if styling.tailwind}}block text-sm font-medium text-gray-700 mb-1{{else}}form-label{{/if}}">
            Email
          </label>
          <input
            type="email"
            id="email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            required
            className="{{#if styling.tailwind}}w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500{{else}}form-input{{/if}}"
            placeholder="Enter your email"
          />
        </div>

        <div>
          <label htmlFor="password" className="{{#if styling.tailwind}}block text-sm font-medium text-gray-700 mb-1{{else}}form-label{{/if}}">
            Password
          </label>
          <input
            type="password"
            id="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            required
            className="{{#if styling.tailwind}}w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500{{else}}form-input{{/if}}"
            placeholder="Enter your password"
          />
        </div>

        <button
          type="submit"
          disabled={isLoading}
          className="{{#if styling.tailwind}}w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed{{else}}login-button{{/if}}"
        >
          {isLoading ? 'Signing In...' : 'Sign In'}
        </button>
      </form>

      <div className="{{#if styling.tailwind}}mt-6 text-center{{else}}oauth-section{{/if}}">
        <p className="{{#if styling.tailwind}}text-sm text-gray-600 mb-4{{else}}oauth-text{{/if}}">Or sign in with</p>
        
        <div className="{{#if styling.tailwind}}flex space-x-4{{else}}oauth-buttons{{/if}}">
          <button
            onClick={() => window.location.href = '/auth/google'}
            className="{{#if styling.tailwind}}flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700{{else}}oauth-button google{{/if}}"
          >
            Google
          </button>
          
          <button
            onClick={() => window.location.href = '/auth/github'}
            className="{{#if styling.tailwind}}flex-1 bg-gray-800 text-white py-2 px-4 rounded-md hover:bg-gray-900{{else}}oauth-button github{{/if}}"
          >
            GitHub
          </button>
        </div>
      </div>
    </div>
  );
};

export default LoginForm;
{{/if}}

{{#if frontend.vue}}
<template>
  <div :class="containerClass">
    <h2 :class="titleClass">Sign In</h2>
    
    <form @submit.prevent="handleSubmit" :class="formClass">
      <div>
        <label for="email" :class="labelClass">Email</label>
        <input
          type="email"
          id="email"
          v-model="email"
          required
          :class="inputClass"
          placeholder="Enter your email"
        />
      </div>

      <div>
        <label for="password" :class="labelClass">Password</label>
        <input
          type="password"
          id="password"
          v-model="password"
          required
          :class="inputClass"
          placeholder="Enter your password"
        />
      </div>

      <button
        type="submit"
        :disabled="isLoading"
        :class="buttonClass"
      >
        {{ isLoading ? 'Signing In...' : 'Sign In' }}
      </button>
    </form>

    <div :class="oauthSectionClass">
      <p :class="oauthTextClass">Or sign in with</p>
      
      <div :class="oauthButtonsClass">
        <button
          @click="window.location.href = '/auth/google'"
          :class="googleButtonClass"
        >
          Google
        </button>
        
        <button
          @click="window.location.href = '/auth/github'"
          :class="githubButtonClass"
        >
          GitHub
        </button>
      </div>
    </div>
  </div>
</template>

<script{{#if typescript}} lang="ts"{{/if}}>
{{#if typescript}}
import { defineComponent, ref } from 'vue';

interface Props {
  isLoading?: boolean;
}
{{else}}
import { ref } from 'vue';
{{/if}}

export default defineComponent({
  name: 'LoginForm',
  {{#if typescript}}
  props: {
    isLoading: {
      type: Boolean,
      default: false
    }
  },
  emits: ['submit'],
  {{/if}}
  setup(props, { emit }) {
    const email = ref('');
    const password = ref('');

    const handleSubmit = () => {
      emit('submit', email.value, password.value);
    };

    return {
      email,
      password,
      handleSubmit,
      {{#if styling.tailwind}}
      containerClass: 'max-w-md mx-auto mt-8 p-6 bg-white rounded-lg shadow-md',
      titleClass: 'text-2xl font-bold mb-6 text-center',
      formClass: 'space-y-4',
      labelClass: 'block text-sm font-medium text-gray-700 mb-1',
      inputClass: 'w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500',
      buttonClass: 'w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed',
      oauthSectionClass: 'mt-6 text-center',
      oauthTextClass: 'text-sm text-gray-600 mb-4',
      oauthButtonsClass: 'flex space-x-4',
      googleButtonClass: 'flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700',
      githubButtonClass: 'flex-1 bg-gray-800 text-white py-2 px-4 rounded-md hover:bg-gray-900'
      {{else}}
      containerClass: 'login-form-container',
      titleClass: 'login-title',
      formClass: 'login-form',
      labelClass: 'form-label',
      inputClass: 'form-input',
      buttonClass: 'login-button',
      oauthSectionClass: 'oauth-section',
      oauthTextClass: 'oauth-text',
      oauthButtonsClass: 'oauth-buttons',
      googleButtonClass: 'oauth-button google',
      githubButtonClass: 'oauth-button github'
      {{/if}}
    };
  }
});
</script>

{{#unless styling.tailwind}}
<style scoped>
.login-form-container {
  max-width: 400px;
  margin: 2rem auto;
  padding: 2rem;
  background: white;
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.login-title {
  font-size: 1.5rem;
  font-weight: bold;
  margin-bottom: 1.5rem;
  text-align: center;
}

.login-form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.form-label {
  display: block;
  font-weight: 500;
  margin-bottom: 0.5rem;
}

.form-input {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid #d1d5db;
  border-radius: 4px;
  font-size: 1rem;
}

.form-input:focus {
  outline: none;
  border-color: #3b82f6;
  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.1);
}

.login-button {
  width: 100%;
  padding: 0.75rem;
  background: #3b82f6;
  color: white;
  border: none;
  border-radius: 4px;
  font-size: 1rem;
  cursor: pointer;
}

.login-button:hover {
  background: #2563eb;
}

.login-button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.oauth-section {
  margin-top: 1.5rem;
  text-align: center;
}

.oauth-text {
  color: #6b7280;
  margin-bottom: 1rem;
}

.oauth-buttons {
  display: flex;
  gap: 1rem;
}

.oauth-button {
  flex: 1;
  padding: 0.75rem;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.oauth-button.google {
  background: #dc2626;
}

.oauth-button.google:hover {
  background: #b91c1c;
}

.oauth-button.github {
  background: #1f2937;
}

.oauth-button.github:hover {
  background: #111827;
}
</style>
{{/unless}}
{{/if}}
