# Production Dockerfile Template for {{frontend}} frontend
# This is a Handlebars template file (.hbs), not a standard Dockerfile
# Template syntax like {{#if}} and {{else}} should be processed by a template engine

############################
# Builder Stage
############################
FROM node:18-alpine AS builder

WORKDIR /app

# Install deps first (better layer caching)
COPY package*.json ./
RUN npm ci

# Copy rest of the code
COPY . .

{{#if frontend.nextjs}}
############################
# Next.js Build
############################
RUN npm run build

############################
# Production Stage (Node.js)
############################
FROM node:18-alpine AS nextjs-production

# Create non-root user
RUN addgroup -g 1001 -S nodejs \
  && adduser -S frontend -u 1001 -G nodejs

WORKDIR /app

# Copy only necessary files
COPY --from=builder --chown=frontend:nodejs /app/package*.json ./ 
COPY --from=builder --chown=frontend:nodejs /app/node_modules ./node_modules 
COPY --from=builder --chown=frontend:nodejs /app/.next ./.next 
COPY --from=builder --chown=frontend:nodejs /app/public ./public

USER frontend

ENV NODE_ENV=production
EXPOSE 3000

CMD ["npm", "start"]

{{else}}
############################
# Build for static frontend (React/Vue/etc.)
############################
RUN npm run build

############################
# Production Stage (Nginx)
############################
FROM nginx:alpine AS static-production

# Copy built files
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx config (optional, fallback if provided)
COPY nginx.conf /etc/nginx/nginx.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
{{/if}}
