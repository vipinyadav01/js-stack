name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint
        continue-on-error: false

      - name: Build packages
        run: npm run build

      - name: Run tests
        run: npm run test
        continue-on-error: false

  # Publish CLI to NPM
  publish-cli:
    name: Publish CLI to NPM
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      packages: write
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build CLI
        run: npm run build:cli

      - name: Check if version changed
        id: version-check
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          PUBLISHED_VERSION=$(npm view "$PACKAGE_NAME" version 2>/dev/null || echo "0.0.0")
          
          echo "Current version: $CURRENT_VERSION"
          echo "Published version: $PUBLISHED_VERSION"
          
          if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
            echo "should_publish=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "should_publish=false" >> $GITHUB_OUTPUT
          fi

      - name: Configure Git
        if: steps.version-check.outputs.should_publish == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Publish to NPM
        if: steps.version-check.outputs.should_publish == 'true'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.version-check.outputs.should_publish == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version-check.outputs.version }}
          name: Release v${{ steps.version-check.outputs.version }}
          body: |
            ## ðŸŽ‰ Release v${{ steps.version-check.outputs.version }}
            
            ### ðŸ“¦ Installation
            ```bash
            npm install -g create-js-stack@${{ steps.version-check.outputs.version }}
            ```
            
            ### ðŸ”— Links
            - [NPM Package](https://www.npmjs.com/package/create-js-stack)
            - [Documentation](https://github.com/${{ github.repository }})
            - [Web Dashboard](https://js-stack.pages.dev)
            
            ### ðŸ“‹ What's New
            - Bug fixes and improvements
            - Updated dependencies
            - Enhanced CLI experience
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Deploy web app to Cloudflare Pages
  deploy-web:
    name: Deploy Web to Cloudflare Pages
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install web dependencies
        run: npm ci
        working-directory: web

      - name: Build web app
        run: npm run build
        working-directory: web
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_PACKAGE_NAME: create-js-stack
          GITHUB_REPO: vipinyadav01/js-stack

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: js-stack
          directory: web/out
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}