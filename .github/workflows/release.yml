name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.10)'
        required: false
        type: string
      release_type:
        description: 'Type of release'
        required: false
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      create_github_release:
        description: 'Create GitHub release'
        required: false
        default: true
        type: boolean

jobs:
  # Quality checks before release
  quality-check:
    name: Quality Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run tests
        run: npm test

      - name: Build CLI
        run: npm run build:cli

      - name: Build web app
        run: npm run build:web

      - name: Run security audit
        run: npm audit --audit-level moderate

  # Test across multiple Node.js versions
  test-matrix:
    name: Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18', '20', '22']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build CLI
        run: npm run build:cli

  # Security scanning
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # Release job - only runs if all checks pass
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [quality-check, test-matrix, security-scan]
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Update version in package.json
        if: inputs.version != ''
        run: |
          npm version ${{ inputs.version }} --no-git-tag-version
          VERSION=${{ inputs.version }}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update version automatically
        if: inputs.version == ''
        run: |
          npm version ${{ inputs.release_type }} --no-git-tag-version
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build CLI
        run: npm run build:cli

      - name: Build web app
        run: npm run build

      - name: Run final tests
        run: npm test

      - name: Publish to NPM
        run: npm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git tag and push
        run: |
          git add package.json package-lock.json
          git commit -m "chore: bump version to v${{ env.VERSION }}"
          git tag "v${{ env.VERSION }}"
          git push origin main
          git push origin "v${{ env.VERSION }}"

      - name: Create GitHub Release
        if: inputs.create_github_release == true
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: |
            ## ðŸŽ‰ Release v${{ env.VERSION }}

            ### ðŸ“¦ Installation
            ```bash
            npm install -g create-js-stack@${{ env.VERSION }}
            ```

            ### ðŸ”— Links
            - [NPM Package](https://www.npmjs.com/package/create-js-stack)
            - [Documentation](https://github.com/${{ github.repository }})
            - [Web Dashboard](https://js-stack.pages.dev)

            ### ðŸ“‹ What's New
            - Bug fixes and improvements
            - Updated dependencies
            - Enhanced CLI experience
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}