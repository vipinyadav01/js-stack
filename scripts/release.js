#!/usr/bin/env node

/**
 * Quick Release Script for JS Stack
 * Handles common development and release workflows
 */

import { execSync } from "child_process";
import { readFileSync } from "fs";
import path from "path";
import { fileURLToPath } from "url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const commands = {
  setup: () => {
    console.log("🔧 Setting up development environment...");
    execSync("npm install", { stdio: "inherit" });
    execSync("npx husky install", { stdio: "inherit" });
    console.log("✅ Setup complete!");
  },

  push: () => {
    console.log("🔍 Checking git status...");
    const status = execSync("git status --porcelain").toString().trim();

    if (!status) {
      console.log("📝 No changes to commit");
      return;
    }

    console.log("📝 Adding all changes...");
    execSync("git add .", { stdio: "inherit" });

    console.log("✅ Committing changes...");
    execSync('git commit -m "feat: development updates"', { stdio: "inherit" });

    console.log("⬆️ Pushing to main...");
    execSync("git push origin main", { stdio: "inherit" });

    console.log("🎉 Push complete!");
  },

  release: () => {
    console.log("🚀 Starting full release process...");

    console.log("📊 Checking changeset status...");
    execSync("npx changeset status", { stdio: "inherit" });

    console.log("📦 Versioning packages...");
    execSync("npm run version-packages", { stdio: "inherit" });

    console.log("🔨 Building release...");
    execSync("npm run build:release", { stdio: "inherit" });

    console.log("📝 Committing changes...");
    execSync("git add .", { stdio: "inherit" });
    execSync(
      'git commit -m "chore(release): version packages" -m "Generated by release script"',
      { stdio: "inherit" },
    );

    console.log("⬆️ Pushing to main...");
    execSync("git push origin main", { stdio: "inherit" });

    console.log("🎉 Release complete! CI/CD will handle publishing.");
  },

  status: () => {
    console.log("📊 Git Status:");
    execSync("git status --short", { stdio: "inherit" });

    console.log("\n📦 Changeset Status:");
    try {
      execSync("npx changeset status", { stdio: "inherit" });
    } catch (e) {
      console.log("No pending changesets");
    }
  },
};

const args = process.argv.slice(2);
const command = args[0];

if (!command) {
  console.log(`
🚀 JS Stack Quick Commands

Usage: node scripts/release.js <command>

Commands:
  setup    - Install dependencies and setup husky
  push     - Add, commit, and push all changes
  release  - Full release process (changeset + build + push)
  status   - Show git and changeset status

Examples:
  node scripts/release.js setup
  node scripts/release.js push
  node scripts/release.js release
  node scripts/release.js status
`);
  process.exit(0);
}

if (commands[command]) {
  try {
    commands[command]();
  } catch (error) {
    console.error(`❌ Error: ${error.message}`);
    process.exit(1);
  }
} else {
  console.error(`❌ Unknown command: ${command}`);
  console.log("Run without arguments to see available commands");
  process.exit(1);
}
